#include <bits/stdc++.h>
using namespace std;
int pattern[1000000];
int * getPattern(string p){
	for(int i=1,j=0;i<p.length();i++){
		while(j>0 && p[i]!=p[j]){
			j=pattern[j-1];
		}
		if(p[i]==p[j])
		 pattern[i]=++j;
	}
	return pattern;
}
int KMP(string s,string p){
	int ans=0;
	getPattern(p);
	for(int i=0,j=0;i<s.length();i++){
		while(j>0 &&s[i]!=p[j]){
			j=pattern[j-1];
		}
		if(s[i]==p[j]){
			if(j==p.length()-1){
				ans=1;
				break;
			}else j++;
		}
	}
	return ans;
}
int main() {
	ios_base :: sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
	string s,p;
	cin>>s>>p;
	printf("%d",KMP(s,p));
	return 0;
}