1. 경로찾기 

문제를 보고 간선이 양방향인지 단방향인지 먼저 보고 풀어야 되는데, 
예제 1을 보고 양방향인줄 알고 양방향으로 구현을 했다. 문제를 읽어보니 단방향이여서 그냥 단방향으로 바꿔주니 AC받았다. 처음에는 플로이드 워셜 알고리즘 사용을 하려고 했지만 이거는 스터디때 알려주자란 생각으로 일단 지금까지
우리가 짜왔던 재귀를 이용한 DPS로 문제를 풀었다.
(모든 연결된 간선을 하나의 정답으로 불러와서 출력하자)
o(n^3) 플로이드 워셜 알고리즘 모든 간선을 다 탐색하면서 보는 것 
for(int k = 0 ; k < N ; k++){
		for(int i = 0 ; i < N ; i++){
			for(int j = 0 ; j < N ; j++){
				if( map[i][k] && map[k][j]){
					map[i][j] = 1;
				}
			}
		}
	}
	
	1->4 
	4->2
	2->7  
	
	1. 1. i - >j 
	2. i->k k->j


* 문제 의도 : bfs,dfs 를 이용할 수 있겠어? and 그래프 탐색 알고리즘 배워볼래? 



2. Shell Game
 난이도가 상당히 어려웠다. 특히 독해, 문제는 이해 됬는데 예제와 결과가 이해가 안됬다. 예제를 통해 이해를 하다가
 hint를 보고 문제를 이해했다. hint를 잘 보도록 해야겠다.
 
 1일때와 2일때와 3일때를 나눠서 생각해서 max를 해서 풀자고 생각하고 풀었다. 
 
* 문제 의도 : 너 구현 쉽게 할 수 있어? 

 3. MooTube (Silver) 

 가중치가 있는 간선을 이용할수 있냐에 대한 문제
 가중치에 따라서 연결하고 답을 찾아주면 되는 문제기 때문에 생각없이 풀었당


* 문제 의도 : 그래프는 알지? 가중치 그래프는??