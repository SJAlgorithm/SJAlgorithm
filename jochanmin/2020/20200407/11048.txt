#include<bits/stdc++.h>
using namespace std;
int dx[]={1,0,1};
int dy[]={0,1,1};
int arr[1000][1000];
int dp[1000][1000];
int n,m;
int go(int x,int y){
	if(x==n-1 && y==m-1){
		return arr[x][y];
	}
	int &ret=dp[x][y];
	if(ret!=-1)
	 return ret;
	ret=0;
	int sum=0;
	for(int i=0;i<3;i++){
		int cx=x+dx[i];
		int cy=y+dy[i];
		if(cx>=0 && cx<n && cy>=0 && cy<m){
			sum=max(sum,go(cx,cy));
		}
	}
	ret=sum+arr[x][y];
	return ret;
}
int main() {
	memset(dp,-1,sizeof(dp));
	scanf("%d %d",&n,&m);
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			scanf("%d",&arr[i][j]);
		}
	}
	// dps 재귀로 돌리면서 갔던길을 계속 기억하면서 돌아오면서 반환해준다.
	printf("%d",go(0,0));
	return 0;
}